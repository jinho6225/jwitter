{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Jweet.js","components/JweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","event","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Jweet","jweetObj","isOwner","editing","setEditing","text","newJweet","setNewJweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","JweetFactory","userObj","jweet","setJweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","jweets","setJweets","useEffect","onSnapshot","snapshot","jweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e51b6b25.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth()\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\nimport React, { useState } from 'react';\n\nconst AuthForm =() => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [newAccount, setNewAccount] = useState(true)\n    const [error, setError] = useState(\"\")    \n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    const onSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                )\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email, password\n                )\n            }\n            console.log(data)\n        } catch (error) {\n            setError(error.message)\n        }\n    }\n    const onChange = (e) => {\n        const { name, value } = e.target\n        if (name === \"email\") {\n            setEmail(value)\n        } else if (name === \"password\") {\n            setPassword(value)\n        }\n    }\n\n    return (\n        <>\n      <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\n                <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    )\n}\n\nexport default AuthForm\n","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, {useState} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Jweet = ({jweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false)\n    const [newJweet, setNewJweet] = useState(jweetObj.text)\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this jweet?\");\n        if (ok) {\n            await dbService.doc(`jweets/${jweetObj.id}`).delete();\n            await storageService.refFromURL(jweetObj.attachmentUrl).delete();\n        } \n    }\n    const toggleEditing = () => setEditing(prev => !prev);\n    const onSubmit = async (e) => {\n        e.preventDefault()\n        await dbService.doc(`jweets/${jweetObj.id}`).update({\n            text: newJweet\n        })\n        setEditing(false)\n    }\n    const onChange = (e) => {\n        const { value } = e.target\n        setNewJweet(value)\n    }\n    return (\n        <div className=\"nweet\">\n        {\n    editing \n    ? \n    (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input type=\"text\" placeholder=\"Edit your jweet\" value={newJweet} className=\"formInput\" autoFocus required onChange={onChange}/>\n                <input type=\"submit\" value=\"Update Jweet\" className=\"formBtn\"/>\n            </form>\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>        </>\n    )\n    : \n    (\n        <>\n            <h4>{jweetObj.text}</h4>\n            {jweetObj.attachmentUrl && <img src={jweetObj.attachmentUrl} alt=\"#\"/>}\n            {isOwner && (\n            <div className=\"nweet__actions\">\n            <span onClick={onDeleteClick}>\n              <FontAwesomeIcon icon={faTrash} />\n            </span>\n            <span onClick={toggleEditing}>\n              <FontAwesomeIcon icon={faPencilAlt} />\n            </span>\n          </div>\n            )}\n        </>\n    )}\n        </div>\n    )\n}\n\nexport default Jweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst JweetFactory = ({ userObj }) => {\n  const [jweet, setJweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (jweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const jweetObj = {\n      text: jweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"jweets\").add(jweetObj);\n    setJweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setJweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={jweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default JweetFactory;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase'\nimport Jweet from \"components/Jweet\"\nimport JweetFactory from \"components/JweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [jweets, setJweets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"jweets\").onSnapshot(snapshot => {\n            const jweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }))\n            setJweets(jweetArray)\n        })\n    }, [])\n\n\n    return (\n        <div className=\"container\">\n        <JweetFactory userObj={userObj}></JweetFactory>\n        <div style={{ marginTop: 30 }}>\n                {jweets.map(jweet => (\n                    <Jweet \n                    key={jweet.id} \n                    jweetObj={jweet} \n                    isOwner={jweet.creatorId === userObj?.uid} \n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\nexport default Home;","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj?.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  // const getMyJweets = async() => {\n  //     const jweets = await dbService\n  //     .collection(\"jweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createdAt\")\n  //     .get();\n  //     console.log(jweets.docs.map((doc) => doc.data()))\n  // }\n  // useEffect(() => {\n  //     getMyJweets();\n  // }, [])\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewDisplayName(value);\n  };\n  \n    const onSubmit = async (e) => {\n        e.preventDefault()\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName\n            })\n            refreshUser();\n        }\n    }\n    return (\n        <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n            <input type=\"text\" placeholder=\"Display name\" autoFocus onChange={onChange} className=\"formInput\" />\n            <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }} />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n    );\n    \n};\n","import React from 'react';\nimport { Link } from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n    <li>\n    <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>    </li>\n    <li>\n    <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj?.displayName\n              ? `${userObj?.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>    </li>\n    </ul>\n\n</nav>;\n\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? \n          <div\n          style={{\n            maxWidth: 890,\n            width: \"100%\",\n            margin: \"0 auto\",\n            marginTop: 80,\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n                                    <Route exact path='/'>\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path='/profile'>\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                        </div>\n                : \n                    <>  \n                        <Route exact path='/'>\n                            <Auth/>\n                        </Route>\n                    </>\n                }\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;\n","import React, {useEffect, useState} from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true)\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true)\n    });\n  }, [])\n  const refreshUser= () => {\n    const user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing...\" }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}